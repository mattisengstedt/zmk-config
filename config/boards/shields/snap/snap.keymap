#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#define U_MOUSE_MOVE_MAX 1500
#define U_MOUSE_SCROLL_MAX 100

#define DEFAULT 0
#define FUNCTION 1

#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT
#define MOVE_UP MOVE_VERT(-U_MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_VERT(U_MOUSE_MOVE_MAX)
#define MOVE_LEFT MOVE_HOR(-U_MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_HOR(U_MOUSE_MOVE_MAX)

#undef SCROLL_UP
#undef SCROLL_DOWN
#undef SCROLL_LEFT
#undef SCROLL_RIGHT
#define SCROLL_UP SCROLL_VERT(U_MOUSE_SCROLL_MAX)
#define SCROLL_DOWN SCROLL_VERT(-U_MOUSE_SCROLL_MAX)
#define SCROLL_LEFT SCROLL_HOR(-U_MOUSE_SCROLL_MAX)
#define SCROLL_RIGHT SCROLL_HOR(U_MOUSE_SCROLL_MAX)

&mmv {
  time-to-max-speed-ms = <300>;
};

&mwh {
  time-to-max-speed-ms = <600>;
};

/{
    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder_1>;
    };

    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp ESC>, <&kp ESC>, <&bootloader>;
        };
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sk LSHIFT>, <&kp CAPS>;
        };
        td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBKT>, <&kp LA(LBKT)>, <&kp LA(LS(LBKT))>;
        };
        td3: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_3";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp RBKT>, <&kp LA(RBKT)>, <&kp LA(LS(RBKT))>;
        };
        td4: tap_dance_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_4";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SEMI>, <&kp LA(SEMI)>, <&kp LA(LS(SEMI))>;
        };
        td5: tap_dance_5 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_5";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SQT>, <&kp LA(SQT)>, <&kp LA(LS(SQT))>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Default";

            // --------------------------------------------------------------------------------------------------------------------------------------------------------------------
            //                                                              |    FN   |    `    |   NMLK  |   SCLK  |    -    |    7    |    8    |    9    |    -    |
            // |   F1     |    F2   |    F3   |    F4   |    F5   |    F6   |    F7   |    F8   |    F9   |   F10   |    +    |    1    |    2    |    3    |    +    |
            // |   ESC    |    1    |    2    |    3    |    4    |    5    |    6    |    7    |    8    |    9    |    0    |    1    |    2    |    3    |   BSPC  |
            // |   TAB    |    Q    |    W    |    E    |    R    |    T    |    Y    |    U    |    I    |    O    |    P    |    [    |    ]    |
            // |   CTRL   |    A    |    S    |    D    |    F    |    G    |    H    |    J    |    K    |    L    |    ;    |    '    |  ENTER  |
            // |   SHIFT  |    Z    |    X    |    C    |    V    |    B    |    N    |    M    |    ,    |    .    |    /    |  SHIFT  |
            // |   Alt    |  PrtScr |    |    |                             |  SPACE  |                                                 |CapsLock |    0    |    .    |
            //
            bindings = <
                                                                               &mo FUNCTION  &ht_tp LS(GRAVE) GRAVE &kp KP_NUM    &kp SLCK         &ht_tp LS(MINUS) MINUS &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_MINUS
            &kp F1     &kp F2        &kp F3        &kp F4        &kp F5        &kp F6        &kp F7           &kp F8        &kp F9           &kp F10          &ht_tp LS(EQUAL) EQUAL &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_PLUS
            &kp ESC    &ht_tp LS(N1) N1 &ht_tp LS(N2) N2 &ht_tp LS(N3) N3 &ht_tp LS(N4) N4 &ht_tp LS(N5) N5 &ht_tp LS(N6) N6    &ht_tp LS(N7) N7 &ht_tp LS(N8) N8    &ht_tp LS(N9) N9    &ht_tp LS(N0) N0 &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp BSPC
            &sk TAB    &kp Q         &kp W         &kp E         &kp R         &kp T         &kp Y            &kp U         &kp I            &kp O            &kp P     &td2      &td3
            &sk LCTRL  &kp A         &kp S         &kp D         &kp F         &kp G         &kp H            &kp J         &kp K            &kp L            &td4      &td5      &kp ENTER
            &td1       &kp Z         &kp X         &kp C         &kp V         &kp B         &kp N            &kp M         &ht_tp LS(COMMA) COMMA &ht_tp LS(DOT) DOT   &kp SLASH &sk RSHIFT
            &sk LALT   &kp PSCRN     &ht_tp LS(NUBS) NUBS                           &lt FUNCTION SPACE                                           &sk CAPS          &kp KP_N0 &kp KP_DOT
                    >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };
        function_layer {
            label = "Function";

            // --------------------------------------------------------------------------------------------------------------------------------------------------------------------
            //                                                              |    FN   |    `    |   NMLK  |   SCLK  |    -    |    7    |    8    |    9    |    -    |
            // |   F1     |    F2   |    F3   |    F4   |    F5   |    F6   |    F7   |    F8   |    F9   |   F10   |    +    |    1    |    2    |    3    |    +    |
            // |   ESC    |    1    |    2    |    3    |    4    |    5    |    6    |    7    |    8    |    9    |    0    |    1    |    2    |    3    |   BSPC  |
            // |   TAB    |    Q    |    W    |    E    |    R    |    T    |    Y    |    U    |    I    |    O    |    P    |    [    |    ]    |
            // |   CTRL   |    A    |    S    |    D    |    F    |    G    |    H    |    J    |    K    |    L    |    ;    |    '    |  ENTER  |
            // |   SHIFT  |    Z    |    X    |    C    |    V    |    B    |    N    |    M    |    ,    |    .    |    /    |  SHIFT  |
            // |   Alt    |  PrtScr |    |    |                             |  SPACE  |                                                 |CapsLock |    0    |    .    |
            //
            bindings = <
                                                                                             &trans           &trans           &trans         &kp PAUSE_BREAK   &trans    &kp HOME &kp UP   &kp PG_UP    &trans    
            &kp C_BRI_DN &kp C_BRI_UP    &trans       &trans       &kp C_PREV   &kp C_PP     &kp C_NEXT       &kp C_MUTE       &kp C_VOL_DN   &kp C_VOL_UP      &trans    &kp LEFT &trans   &kp RIGHT    &trans    
            &trans   &bt BT_SEL 0    &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans           &trans           &trans         &trans            &trans    &kp END  &kp DOWN &kp PG_DN    &bt BT_CLR    
            &out OUT_TOG &trans          &kp UP       &trans       &trans       &trans       &trans           &mkp LCLK        &mmv MOVE_UP   &mkp LCLK         &trans    &trans   &trans 
            &trans       &kp LEFT        &kp DOWN     &kp RIGHT    &trans       &trans       &trans           &mmv MOVE_LEFT   &mmv MOVE_DOWN &mmv MOVE_RIGHT   &trans    &trans   &trans     
            &trans       &trans          &trans       &trans       &trans       &trans       &mwh SCROLL_LEFT &mwh SCROLL_DOWN &mwh SCROLL_UP &mwh SCROLL_RIGHT &trans    &trans    
            &trans       &kp KP_MULTIPLY &trans                                              &trans                                                             &trans    &kp INS  &kp DEL 
                    >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };
    };
};
