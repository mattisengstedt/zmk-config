#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#define U_MOUSE_MOVE_MAX 1500
#define U_MOUSE_SCROLL_MAX 100

#define DEFAULT 0
#define MAC_LAYER 1
#define FUNCTION 2
#define NUM_LAYER 3

#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT
#define MOVE_UP MOVE_VERT(-U_MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_VERT(U_MOUSE_MOVE_MAX)
#define MOVE_LEFT MOVE_HOR(-U_MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_HOR(U_MOUSE_MOVE_MAX)

#undef SCROLL_UP
#undef SCROLL_DOWN
#undef SCROLL_LEFT
#undef SCROLL_RIGHT
#define SCROLL_UP SCROLL_VERT(U_MOUSE_SCROLL_MAX)
#define SCROLL_DOWN SCROLL_VERT(-U_MOUSE_SCROLL_MAX)
#define SCROLL_LEFT SCROLL_HOR(-U_MOUSE_SCROLL_MAX)
#define SCROLL_RIGHT SCROLL_HOR(U_MOUSE_SCROLL_MAX)

&mmv {
  time-to-max-speed-ms = <300>;
};

&mwh {
  time-to-max-speed-ms = <600>;
};

/{
    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder_1>;
        triggers-per-rotation = <12>;
    };

    behaviors {
        
        td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LA(LBKT)>, <&kp LA(LS(LBKT))>;
        };
        td3: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_3";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LA(RBKT)>, <&kp LA(LS(RBKT))>;
        };
        td4: tap_dance_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_4";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LA(SEMI)>, <&kp LA(LS(SEMI))>;
        };
        td5: tap_dance_5 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_5";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LA(SQT)>, <&kp LA(LS(SQT))>;
        };
        rst: boot_reset {
            compatible = "zmk,behavior-hold-tap";
            label = "Reset Tap - Bootloader Hold";
            #binding-cells = <2>;
            tapping_term_ms = <5000>;
            flavor = "tap-preferred";
            bindings = <&bootloader>, <&sys_reset>;
        };
        bt_clr_esc: bt_clr_esc {
            compatible = "zmk,behavior-hold-tap";
            label = "Esc Tap - Bluetooth Clear Hold";
            #binding-cells = <2>;
            tapping_term_ms = <5000>;
            flavor = "tap-preferred";
            bindings = <&bt_clr_macro>, <&kp>;
        };
    };

    macros {
        set_default: set_default {
            label = "Set Default layer";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to DEFAULT>
                , <&out OUT_USB>
                ;
        };
        set_mac: set_mac {
            label = "Set Mac layer";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to MAC_LAYER>
                , <&out OUT_BLE>
                , <&bt BT_SEL 0>
                ;
        };
        mac_pscrn: mac_pscrn {
            label = "mac_pscrn";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_press &kp LMETA>
                , <&macro_tap &kp N5>
                , <&macro_release &kp LMETA>
                , <&macro_release &kp LSHFT>
                ;
        };
        bt_clr_macro: bt_clr_macro {
            label = "Clear bluetooth macro";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&bt BT_CLR>
                ;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Default";

            // --------------------------------------------------------------------------------------------------------------------------------------------------------------------
            //                                                              |    FN   |    `    |   NMLK  |   SCLK  |    -    |    7    |    8    |    9    |    -    |
            // |   F1     |    F2   |    F3   |    F4   |    F5   |    F6   |    F7   |    F8   |    F9   |   F10   |    +    |    1    |    2    |    3    |    +    |
            // |   ESC    |    1    |    2    |    3    |    4    |    5    |    6    |    7    |    8    |    9    |    0    |    1    |    2    |    3    |   BSPC  |
            // |   TAB    |    Q    |    W    |    E    |    R    |    T    |    Y    |    U    |    I    |    O    |    P    |    [    |    ]    |
            // |   CTRL   |    A    |    S    |    D    |    F    |    G    |    H    |    J    |    K    |    L    |    ;    |    '    |  ENTER  |
            // |   SHIFT  |    Z    |    X    |    C    |    V    |    B    |    N    |    M    |    ,    |    .    |    /    |  SHIFT  |
            // |   Alt    |  PrtScr |    |    |                             |  SPACE  |                                                 |CapsLock |    0    |    .    |
            //
            bindings = <
                                                                                            &mo FUNCTION       &kp GRAVE  &tog NUM_LAYER &kp SLCK  &kp MINUS  &kp HOME  &kp UP    &kp PG_UP &kp KP_MINUS
            &kp F1     &kp F2        &kp F3        &kp F4        &kp F5        &kp F6       &kp F7             &kp F8     &kp F9         &kp F10   &kp EQUAL  &kp LEFT  &kp DOWN  &kp RIGHT &kp KP_PLUS
            &kp ESC    &kp N1        &kp N2        &kp N3        &kp N4        &kp N5       &kp N6             &kp N7     &kp N8         &kp N9    &kp N0     &kp END   &kp DOWN  &kp PG_DN &kp BSPC
            &kp TAB    &kp Q         &kp W         &kp E         &kp R         &kp T        &kp Y              &kp U      &kp I          &kp O     &kp P      &td2      &td3 
            &kp LCTRL  &kp A         &kp S         &kp D         &kp F         &kp G        &kp H              &kp J      &kp K          &kp L     &td4       &td5      &kp ENTER
            &kp LSHIFT &kp Z         &kp X         &kp C         &kp V         &kp B        &kp N              &kp M      &kp COMMA      &kp DOT   &kp SLASH  &kp RSHIFT
            &kp LMETA  &kp LALT      &kp BSLH                                               &kp SPACE                                                         &kp PSCRN &kp KP_N0 &kp KP_DOT
                    >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        mac_layer {
            label = "Mac";

            // --------------------------------------------------------------------------------------------------------------------------------------------------------------------
            //                                                              |    FN   |    `    |   NMLK  |   SCLK  |    -    |    7    |    8    |    9    |    -    |
            // |   F1     |    F2   |    F3   |    F4   |    F5   |    F6   |    F7   |    F8   |    F9   |   F10   |    +    |    1    |    2    |    3    |    +    |
            // |   ESC    |    1    |    2    |    3    |    4    |    5    |    6    |    7    |    8    |    9    |    0    |    1    |    2    |    3    |   BSPC  |
            // |   TAB    |    Q    |    W    |    E    |    R    |    T    |    Y    |    U    |    I    |    O    |    P    |    [    |    ]    |
            // |   CTRL   |    A    |    S    |    D    |    F    |    G    |    H    |    J    |    K    |    L    |    ;    |    '    |  ENTER  |
            // |   SHIFT  |    Z    |    X    |    C    |    V    |    B    |    N    |    M    |    ,    |    .    |    /    |  SHIFT  |
            // |   Alt    | CapsLck |    |    |                             |  SPACE  |                                                 | PrnScrn |    0    |    .    |
            //
            bindings = <
                                                                                          &mo FUNCTION &trans     &trans         &trans  &trans     &trans      &trans     &trans    &trans 
            &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans     &trans         &trans  &trans     &trans      &trans     &trans    &trans 
            &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans     &trans         &trans  &trans     &trans      &trans     &trans    &trans 
            &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans     &trans         &trans  &trans     &trans      &trans 
            &kp LMETA    &trans       &trans       &trans       &trans       &trans       &trans       &trans     &trans         &trans  &trans     &trans      &trans     
            &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans     &trans         &trans  &trans     &trans   
            &kp LCTRL    &trans       &trans                                              &trans                                                    &mac_pscrn  &trans  &trans
                    >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        function_layer {
            label = "Function";

            // --------------------------------------------------------------------------------------------------------------------------------------------------------------------
            //                                                              |    FN   |    `    |   NMLK  |   SCLK  |    -    |    7    |    8    |    9    |    -    |
            // |   F1     |    F2   |    F3   |    F4   |    F5   |    F6   |    F7   |    F8   |    F9   |   F10   |    +    |    1    |    2    |    3    |    +    |
            // |   ESC    |    1    |    2    |    3    |    4    |    5    |    6    |    7    |    8    |    9    |    0    |    1    |    2    |    3    |   BSPC  |
            // |   TAB    |    Q    |    W    |    E    |    R    |    T    |    Y    |    U    |    I    |    O    |    P    |    [    |    ]    |
            // |   CTRL   |    A    |    S    |    D    |    F    |    G    |    H    |    J    |    K    |    L    |    ;    |    '    |  ENTER  |
            // |   SHIFT  |    Z    |    X    |    C    |    V    |    B    |    N    |    M    |    ,    |    .    |    /    |  SHIFT  |
            // |   Alt    | CapsLck |    |    |                             |  SPACE  |                                                 | PrtScr  |    0    |    .    |
            //
            bindings = <
                                                                                     &mo FUNCTION      &trans            &trans          &kp PAUSE_BREAK    &trans  &trans  &trans  &trans  &trans  
            &kp C_BRI_DN    &kp C_BRI_UP  &trans    &trans     &kp C_PREV  &kp C_PP  &kp C_NEXT        &kp C_MUTE        &kp C_VOL_DN    &kp C_VOL_UP       &trans  &trans  &trans  &trans  &trans    
            &bt_clr_esc 0 0 &set_default  &set_mac  &trans     &trans      &trans    &trans            &trans            &trans          &trans             &trans  &trans  &trans  &trans  &rst 0 0  
            &out OUT_TOG    &kp HOME      &kp UP    &kp END    &trans      &trans    &trans            &mkp LCLK         &mmv MOVE_UP    &mkp LCLK          &trans  &trans  &trans  
            &trans          &kp LEFT      &kp DOWN  &kp RIGHT  &trans      &trans    &trans            &mmv MOVE_LEFT    &mmv MOVE_DOWN  &mmv MOVE_RIGHT    &trans  &trans  &trans     
            &caps_word      &trans        &trans    &trans     &trans      &trans    &mwh SCROLL_LEFT  &mwh SCROLL_DOWN  &mwh SCROLL_UP  &mwh SCROLL_RIGHT  &trans  &trans    
            &kp CAPS        &trans        &trans                                     &trans                                                                         &kp KP_MULTIPLY &kp INS  &kp DEL 
                    >;
            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

      num_layer {
            label = "Numpad";

            // --------------------------------------------------------------------------------------------------------------------------------------------------------------------
            //                                                              |    FN   |    `    |   NMLK  |   SCLK  |    -    |    7    |    8    |    9    |    -    |
            // |   F1     |    F2   |    F3   |    F4   |    F5   |    F6   |    F7   |    F8   |    F9   |   F10   |    +    |    1    |    2    |    3    |    +    |
            // |   ESC    |    1    |    2    |    3    |    4    |    5    |    6    |    7    |    8    |    9    |    0    |    1    |    2    |    3    |   BSPC  |
            // |   TAB    |    Q    |    W    |    E    |    R    |    T    |    Y    |    U    |    I    |    O    |    P    |    [    |    ]    |
            // |   CTRL   |    A    |    S    |    D    |    F    |    G    |    H    |    J    |    K    |    L    |    ;    |    '    |  ENTER  |
            // |   SHIFT  |    Z    |    X    |    C    |    V    |    B    |    N    |    M    |    ,    |    .    |    /    |  SHIFT  |
            // |   Alt    |  PrtScr |    |    |                             |  SPACE  |                                                 |CapsLock |    0    |    .    |
            //
            bindings = <
                                                                  &trans   &trans   &tog NUM_LAYER &trans   &trans   &kp N7     &kp N8     &kp N9     &trans
            &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans         &trans   &trans   &kp N4     &kp N5     &kp N6     &trans
            &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans         &trans   &trans   &kp N1     &kp N2     &kp N3     &trans
            &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans         &trans   &trans   &trans     &trans 
            &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans         &trans   &trans   &trans     &trans     
            &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans         &trans   &trans   &trans    
            &trans   &trans   &trans                              &trans                                                        &trans     &trans     &trans
                    >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };
    };
};
